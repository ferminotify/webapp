<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Fermi Notify è un servizio non ufficiale dell'IS &quot;E. Fermi&quot; Mantova che invia delle notifiche per avvisare delle variazioni dell'orario del calendario giornaliero.">
    <meta propety="og:image" content="/img/og-logo.png">
    <meta property="og:description" content="Fermi Notify è un servizio non ufficiale dell'IS &quot;E. Fermi&quot; Mantova che invia delle notifiche per avvisare delle variazioni dell'orario del calendario giornaliero.">
    <meta property="og:title" content="Fermi Notify">
    <meta property="og:type" content="website">
    <script src="/js/hamburger.js" defer></script>
    <link rel="icon" type="image/x-icon" href="/img/favicon-black.png">
    <!-- css -->
    <link rel="stylesheet" href="/css/style.css" type="text/css">
	<link rel="stylesheet" href="/css/alertbanner.css" type="text/css">
    <link rel="stylesheet" href="/css/cercaeventi.css" type="text/css">
	<link rel="stylesheet" href="/css/buymeacoffee.css" type="text/css">
	<link rel="preload" href="/css/dark.css" as="style">
	<link rel="preload" href="/css/light.css" as="style">
    <link rel="stylesheet" href="/css/dark.css" type="text/css" id="themeCSS">
	<script src="/js/changeTheme.js"></script>
    <!-- Font Awesome -->
    <script src="https://kit.fontawesome.com/95ae55bd9a.js" crossorigin="anonymous"></script>
    <!-- Material Icon -->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <!-- jQuery 3.6.0 -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- Moment.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>

    <title>Fermi Notify</title>

</head>
<body>

<%- include('includes/navbar.ejs', { isLogged: isLogged, active: 'cercaeventi' }); %>

<div id="CercaEventi">
<!-- cerca eventi -->
<div class="cercaEventi-container">
	<div class="cercaEventi">
		<div class="cercaEventi-title">
			<span class="material-symbols-outlined">
				event
			</span>
			<h1>Cerca <br><span class="primary-text">eventi</span></h1>
		</div>
		<div class="cercaEventi-form">
			<div class="material-textfield">
				<input placeholder=" " type="text" id="cercaEventiInput" onkeyup="if (event.keyCode === 13) { cercaEventi(); }">
				<label>Keyword</label>
			</div>
			<script>
				$(function() {
					$('#cercaEventiInput').keyup(function() {
						this.value = this.value.toLocaleUpperCase();
					});
				});
			</script>
			<a id="submit-btn" class="btn filled addButton" onclick="cercaEventi()"><i class="fa-solid fa-chevron-right"></i></a>
		</div>
	</div>
</div>

<div class="relative flex-center-x cercaEventiInfo-container">
<a id="cercaEventiInfoShow" onclick="$('#cercaEventiInfoShow').slideToggle(300); setTimeout(() => {$('#cercaEventiInfo').slideToggle(300);}, 300); localStorage.setItem('cercaEventiInfoClosed', 'false');" class="btn text hidden"><span class="material-symbols-outlined material-space-right">help</span><span>Come funziona?</span></a>
<div class="rounded-container" id="cercaEventiInfo">
	<div class="rounded-inner">
		<p>Cerca nel <span class="primary-text">calendario giornaliero</span> una <span class="primary-text">keyword</span> e mostra le variazioni previsti nei prossimi 3 giorni.</p>
		<p>Fai attenzione alla <span class="primary-text">formattazione</span> della keyword: dev'essere uguale a quella scritta nel calendario giornaliero!</p>
		<div class="hidden">
			<ul><li style="padding: 0; line-height: 1;">Esempio: con <code>5CIIN</code> mostra le variazioni della classe <i>5CIIN</i>.</li></ul>
			<p>Accetta i cookies per <span class="primary-text">salvare</span> le keyword inserite.</p>
			<p>Usa <code>*</code> per mostrare tutte le variazioni.</p>
		</div>
		<div class="action-btn-container">
			<a class="btn text" onclick="$('#cercaEventiInfo .hidden').slideToggle(300); $('.action-btn-container-btn-text').html() == 'Mostra di più' ? $('.action-btn-container-btn-text').html('Mostra di meno') : $('.action-btn-container-btn-text').html('Mostra di più');"><span class="action-btn-container-btn-text">Mostra di più</span></a>
			<a class="btn filled" onclick="$('#cercaEventiInfo').slideToggle(300); setTimeout(() => {$('#cercaEventiInfoShow').slideToggle(300);}, 300); localStorage.setItem('cercaEventiInfoClosed', 'true');">Chiudi</a>
		</div>
	</div>
</div>
<script>
	if(localStorage.getItem('cercaEventiInfoClosed') == 'true'){
		$('#cercaEventiInfo').hide();
		$('#cercaEventiInfoShow').show();
	}else{
		$('#cercaEventiInfo').show();
		$('#cercaEventiInfoShow').hide();
	}
</script>
</div>

<div class="cercaEventi-section">

	<div class="cercaEventi-keywords-list" style="display: none;"></div>

	<div class="cercaEventi-filter-container">
		<div class="relative">
			<a class="btn outlined flex-center" onclick="showFilters(this)"><span class="material-symbols-outlined material-space-right">tune</span> Filtri</a>
			<span class="material-symbols-outlined filter-on-circle">
				circle
			</span>
		</div>
		<a class="btn outlined filter-btn hidden" onclick="filter(this)">Nascondi conclusi</a>
		<a class="btn outlined filter-btn hidden" onclick="filter(this)">In corso</a>
		<a class="btn outlined filter-btn hidden" onclick="filter(this)">Futuri</a>
		<a class="btn outlined filter-btn hidden" onclick="filter(this)">Conclusi</a>
		<a class="btn text reset-filter-btn hidden" onclick="resetFilters()">Reset filtri</a>
	</div>

	<div class="events-content-container">
		<div id="events-loading" style="display: none;">
			<div class="lds-grid">
				<div></div>
				<div></div>
				<div></div>
				<div></div>
				<div></div>
				<div></div>
				<div></div>
				<div></div>
				<div></div>
			</div>
		</div>

		<div id="noevents" style="text-align: center; margin: 25px 0; display: none;"></div>

		<!-- today -->
		<div id="events-0" class="events-container">
			<h3 class="events-date" id="events-0-date"></h3>
			<div id="events-0-eventslist" class="events-list"></div>
		</div>
		<!-- tomorrow -->
		<div id="events-1" class="events-container">
			<h3 class="events-date" id="events-1-date"></h3>
			<div id="events-1-eventslist" class="events-list"></div>
		</div>
		<!-- dopotomorrow -->
		<div id="events-2" class="events-container">
			<h3 class="events-date" id="events-2-date"></h3>
			<div id="events-2-eventslist" class="events-list"></div>
		</div>
		<!-- dopodopotomorrow -->
		<div id="events-3" class="events-container">
			<h3 class="events-date" id="events-3-date"></h3>
			<div id="events-3-eventslist" class="events-list"></div>
		</div>
	</div>

</div>

<script>
	/*
	 * constrains:
	 * - event must have either start.dateTime & end.dateTime or start.date & end.date (no start.date and end.dateTime)
	 */
	const url = "https://fn.lkev.in/calendar?format=csv";

	const daysShown = 4; // 0 = today, 1 = tomorrow, 2 = day after tomorrow, 3 = day after day after tomorrow
	
	var keywords = [];

	// get saved keywords
	if(localStorage.getItem("keywords") != null) keywords = JSON.parse(localStorage.getItem("keywords"));

	var eventRunning;

	printKeywords();
	events();

	function printKeywords(){
		$("#noevents").html("");
		$("#noevents").hide();
		$(".cercaEventi-keywords-list").html("");
		$(".events-container").hide();
		$("#events-loading").show();
		$(".events-list").html("");
		keywords.forEach(kw => {
			$(".cercaEventi-keywords-list").append("<span class='cercaEventi-keyword' onclick='removeKeyword(this)'>" + kw + " <i class='fa-solid fa-delete-left'></i></span>");
		});
		
		if(keywords.length > 0) $(".cercaEventi-keywords-list").show();
		else $(".cercaEventi-keywords-list").hide();

		localStorage.setItem("keywords", JSON.stringify(keywords));
	}

	// adds a keyword to the list
	function cercaEventi(){

		if($("#cercaEventiInput").val() == "") return;

		// sanitize input
		/*
		 * /\s+/g all whitespace replaced with single space // commented - allows multiple spaces (whitespace: pre in css)
		 * /</g and />/g replace < and > with &lt; and &gt;
		 * .trim() removes whitespace from start and end of string
		 */
		//let inputkw = $("#cercaEventiInput").val().replace(/\s+/g, ' ').replace(/</g, "&lt;").replace(/>/g, "&gt;").trim();
		let inputkw = $("#cercaEventiInput").val().replace(/</g, "&lt;").replace(/>/g, "&gt;").trim();
		
		if(!keywords.includes(inputkw)){
			keywords.push(inputkw);
		}
		printKeywords();
		//$("#cercaEventiInput").val("");
		
		events();
	}

	function removeKeyword(elem){

		var keyword = $(elem).text();
		keyword = keyword.substring(0, keyword.length - 1);
		keywords.splice(keywords.indexOf(keyword), 1);
		$(elem).remove();
		
		printKeywords();

		events();
	}

	var isRunning = false;
	function events(){
		(async function fetchData() {
			if(isRunning) return;
			isRunning = true;
			try {
				$('#noevents .error-container').remove();
				$("#events-loading").show();
				const response = await fetch(url);
				const data = await response.text();
				$("#events-loading").hide();
				printEvents(data);

				// analytics - save to db the keyword searched
				if(keywords.length > 0){
					$.ajax({
						type: "POST",
						url: "/api/analytics/searched-keywords-filtraEventi",
						data: {
							keyword: keywords.join(", "),
							user_email: "<%= email ? email : '' %>"
						},
						success: function(data){
							console.log(data);
						},
						error: function(error){
							console.error(error);
						}
					});
				}

			} catch (error) {
				console.error(error.stack);
				// print error in the page
				$("#noevents").append("<div class='error-container'><p class='errorText'><span class='errorTitle'>Errore nel caricamento degli eventi</span> <a class='errorRetry btn text' onclick='events()'><span class='material-symbols-outlined'>autorenew</span> <span>Riprova</span></a></p><p class='errorDescription'>[ " + error.stack + " ]<br><a class='link' href='mailto:mail@fn.lkev.in?subject=Errore caricamento eventi&body=Ciao,%0D%0AHo riscontrato questo errore durante il caricamento degli eventi%0D%0A%0D%0A" + error.stack + "%0D%0A%0D%0Acon le keywords:%0D%0A" + keywords + ".%0D%0A%0D%0A%0D%0A" + moment().format("HH:mm DD/MM/YYYY") + "' style='margin-left: 5px;'><i class='fa-solid fa-circle-exclamation'></i> Clicca qui per segnalare il problema</a><br>mail@fn.lkev.in</p></div>");
				$("#noevents").show();
				$("#events-loading").hide();
			}
			isRunning = false;
		})();
	}

	function printEvents(data) {

		function getEventHTML(data, startDateString, endDateString) {
			if (endDateString !== undefined) {
				return `
					<div class="event ${eventRunning}">
					<p class="event-title">${data}</p>
						<div class="event-time">
							<p class="event-time-start">
								<span class="start-end-text"><span class="material-symbols-outlined">start</span></span>
								<span>${startDateString}</span>
							</p>
							<p class="event-time-end">
								<span class="start-end-text"><span class="material-symbols-outlined mirrorElement">start</span></span>
								<span>${endDateString}</span>
							</p>
						</div>
					</div>
				`;
			} else {
				return `
					<div class="event ${eventRunning}">
						<p class="event-title">${data}</p>
						<div class="event-time">
							<p class="event-time-start">
								<span class="start-end-text"><span class="material-symbols-outlined">schedule</span></span>
								<span>${startDateString}</span>
							</p>
						</div>
					</div>
				`;
			}

		}

		var events = csv2json(data); // events csv --> json

		console.log(events);

		const weekDay=["Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato", "Domenica"];

		for (let i = 0; i < daysShown; i++) {
			const html = `<span class='color: primary-text'>${getDayDescription(i)}</span><span>${weekDay[moment().add(i, 'days').isoWeekday()-1]} ${moment().add(i, 'days').format("DD/MM/YYYY")}</span>`;
			$(`#events-${i}-date`).html(html);
		}

		function getDayDescription(daysAhead) {
			switch (daysAhead) {
				case 0:
					return 'Oggi';
				case 1:
					return 'Domani';
				case 2:
					return 'Dopodomani';
				default:
					return `Tra ${daysAhead} giorni`;
			}
		}

		var flagThereAreEvents = false; // flag to check if there are events

		var printedUIDs = []; // array of events already printed

		var filteredEvents = []; // array of events filtered by keywords

		keywords.forEach(kw => {
			// regex --> kw followed by a non-word character
			// filtra eventi per keyword e per data (deve finire dopo oggi)
			filteredEvents = filteredEvents.concat(events.filter(event => (RegExp("\\b" + kw + "\\b", "i").test(event.summary) && ( moment(event["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").isAfter(moment().startOf('day')) || moment(event["end.date"], "YYYY-MM-DD").isAfter(moment().startOf('day'))))));

			console.log(kw);
			console.log(filteredEvents);

		});

		if(keywords.length == 0){
			filteredEvents = filteredEvents.concat(events.filter(event => (moment(event["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").isAfter(moment().startOf('day')) || moment(event["end.date"], "YYYY-MM-DD").isAfter(moment().startOf('day')))));
		}

		if(filteredEvents.length == 0){
			$("#noevents").append("<p style='color: var(--on-surface-primary);'>Nessun evento trovato per i prossimi 3 giorni</p>");
			$("#noevents").show();
			return;
		}
		
		// sort events by date
		filteredEvents.sort(function(a, b) {
			if (a["start.dateTime"] != null && b["start.dateTime"] != null) { // if both events have a start date and time
				return moment(a["start.dateTime"], "YYYY-MM-DDTHH:mm:ss").diff(moment(b["start.dateTime"], "YYYY-MM-DDTHH:mm:ss"));
			} else if (a["start.dateTime"] != null && b["start.dateTime"] == null) { // if a has a start date and time and b doesn't
				return moment(a["start.dateTime"], "YYYY-MM-DDTHH:mm:ss").diff(moment(b["start.date"], "YYYY-MM-DD"));
			} else if (a["start.dateTime"] == null && b["start.dateTime"] != null) { // if b has a start date and time and a doesn't
				return moment(a["start.date"], "YYYY-MM-DD").diff(moment(b["start.dateTime"], "YYYY-MM-DDTHH:mm:ss"));
			} else { // if both events don't have a start date and time
				return moment(a["start.date"], "YYYY-MM-DD").diff(moment(b["start.date"], "YYYY-MM-DD"));
			}
		});

		// sort events that have the same start date by end date
		filteredEvents.sort(function(a, b) {
			if (a["start.dateTime"] != null && b["start.dateTime"] != null) { // if both events have a start date and time
				if (moment(a["start.dateTime"], "YYYY-MM-DDTHH:mm:ss").isSame(moment(b["start.dateTime"], "YYYY-MM-DDTHH:mm:ss"))) { // if both events have the same start date and time
					return moment(a["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").diff(moment(b["end.dateTime"], "YYYY-MM-DDTHH:mm:ss"));
				}
			} else if (a["start.dateTime"] != null && b["start.dateTime"] == null) { // if a has a start date and time and b doesn't
				if (moment(a["start.dateTime"], "YYYY-MM-DDTHH:mm:ss").isSame(moment(b["start.date"], "YYYY-MM-DD"))) { // if both events have the same start date
					return moment(a["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").diff(moment(b["end.date"], "YYYY-MM-DD"));
				}
			} else if (a["start.dateTime"] == null && b["start.dateTime"] != null) { // if b has a start date and time and a doesn't
				if (moment(a["start.date"], "YYYY-MM-DD").isSame(moment(b["start.dateTime"], "YYYY-MM-DDTHH:mm:ss"))) { // if both events have the same start date
					return moment(a["end.date"], "YYYY-MM-DD").diff(moment(b["end.dateTime"], "YYYY-MM-DDTHH:mm:ss"));
				}
			} else { // if both events don't have a start date and time
				if (moment(a["start.date"], "YYYY-MM-DD").isSame(moment(b["start.date"], "YYYY-MM-DD"))) { // if both events have the same start date
					return moment(a["end.date"], "YYYY-MM-DD").diff(moment(b["end.date"], "YYYY-MM-DD"));
				}
			}
		});

		// for every event associated with the keyword
		for (var i = 0; i < filteredEvents.length; i++) {

			if(printedUIDs.includes(filteredEvents[i].uid)) // if event already printed
				continue; // skip event

			printedUIDs.push(filteredEvents[i].uid); // event is printed

			if (filteredEvents[i]["start.dateTime"] != null) { // if event has a start date and time

				// ora inizio --> ora fine
				var startDate = moment(filteredEvents[i]["start.dateTime"], "YYYY-MM-DDTHH:mm:ss").format("DD/MM/YYYY HH:mm:ss");
				var endDate = moment(filteredEvents[i]["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").format("DD/MM/YYYY HH:mm:ss");

				let tempEndDate = endDate;
				if(endDate == startDate) // if end date == start date --> temp end date add 1 hour
					tempEndDate = moment(filteredEvents[i]["end.dateTime"], "YYYY-MM-DDTHH:mm:ss").add(1, 'hours').format("DD/MM/YYYY HH:mm:ss");
				if(moment(tempEndDate, "DD/MM/YYYY HH:mm:ss").isBefore(moment())) eventRunning = "event-past";
				else if(moment().isBetween(moment(startDate, "DD/MM/YYYY HH:mm:ss"), moment(tempEndDate, "DD/MM/YYYY HH:mm:ss"))) eventRunning = "event-running";
				else eventRunning = "";

				// if start date == end date (same day)
				if (moment(startDate, "DD/MM/YYYY HH:mm:ss").isSame(moment(endDate, "DD/MM/YYYY HH:mm:ss"), "day")) {

					// for every day shown
					for (var gg = 0; gg < daysShown; gg++) {

						// if filteredEvents "start.date" is today + gg
						if (moment(startDate, "DD/MM/YYYY HH:mm:ss").isSame(moment().add(gg, 'days'), "day")) {

							// $("#events-" + gg).css("display", "block");
							// if start and end time matches --> print the time only once
							if (moment(startDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm") == moment(endDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm")) {
								$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm")));
							} else { // if start and end time doesn't match --> print start and end time
								$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm"), moment(endDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm")));
							}

						}

					}

				} else { // if start date != end date --> print day and time (events that last more than one day)

					// for every day shown
					for (var gg = 0; gg < daysShown; gg++) {

						if (moment(startDate, "DD/MM/YYYY HH:mm:ss").isSame(moment().add(gg, 'days'), "day")) { // if start date is today + gg
							// $("#events-" + gg).css("display", "block");
							$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm"), moment(endDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY HH:mm")));
						}else if(moment(endDate, "DD/MM/YYYY HH:mm:ss").isSame(moment().add(gg, 'days'), "day")){ // if end date is today + gg
							// $("#events-" + gg).css("display", "block");
							$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY HH:mm"), moment(endDate, "DD/MM/YYYY HH:mm:ss").format("HH:mm")));
						}else if(moment(startDate, "DD/MM/YYYY HH:mm:ss").isBefore(moment().add(gg, 'days'), "day") && moment(endDate, "DD/MM/YYYY HH:mm:ss").isAfter(moment().add(gg, 'days'), "day")){ // if event starts before today + gg and ends after today + gg
							// $("#events-" + gg).css("display", "block");
							$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY HH:mm"), moment(endDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY HH:mm")));
						}

					}

				}


			} else {

				// giorno --> giorno (orario not specified)
				var startDate = moment(filteredEvents[i]["start.date"], "YYYY-MM-DD").format("DD/MM/YYYY");
				var endDate = moment(filteredEvents[i]["end.date"], "YYYY-MM-DD").format("DD/MM/YYYY");

				if(moment(endDate, "DD/MM/YYYY").isBefore(moment())) eventRunning = "event-past";
				else if(moment().isBetween(moment(startDate, "DD/MM/YYYY"), moment(endDate, "DD/MM/YYYY"))) eventRunning = "event-running";
				else eventRunning = "";

				// for every day shown
				for (var gg = 0; gg < daysShown; gg++) {

					// if starts today + gg
					if (moment(startDate, "DD/MM/YYYY").isSame(moment().add(gg, 'days'), "day") || (moment(startDate, "DD/MM/YYYY").isBefore(moment().add(gg, 'days'), "day") && moment(endDate, "DD/MM/YYYY").isAfter(moment().add(gg, 'days'), "day"))) {

						// $("#events-" + gg).css("display", "block");
						$("#events-" + gg + "-eventslist").append(getEventHTML(filteredEvents[i]["summary"], moment(startDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY"), moment(endDate, "DD/MM/YYYY HH:mm:ss").format("DD/MM/YYYY")));

					}
				}
			}
		}

        showEvents();
		applyFilterFromLocalStorage();
	}

	function showEvents(){
		// display block to every day container that has at least one event
		for (let gg = 0; gg < daysShown; gg++) {
			const $eventsContainer = $("#events-" + gg);
			const hasEvents = $("#events-" + gg + "-eventslist").html().trim() !== "";
			$eventsContainer.css("display", hasEvents ? "block" : "none");
		}
	}

	// data is fetched in csv --> convert to json
	function csv2json(text, headers, quoteChar = '"', delimiter = ',') {
		const regex = new RegExp(`\\s*(${quoteChar})?(.*?)\\1\\s*(?:${delimiter}|$)`, 'gs');

		const match = line => [...line.matchAll(regex)]
			.map(m => m[2])  // we only want the second capture group
			.slice(0, -1);   // cut off blank match at the end

		const lines = text.split('\n');
		const heads = headers ?? match(lines.shift());

		return lines.map(line => {
			return match(line).reduce((acc, cur, i) => {
				// Attempt to parse as a number; replace blank matches with `null`
				const val = cur.length <= 0 ? null : Number(cur) || cur;
				const key = heads[i] ?? `extra_${i}`;
				return { ...acc, [key]: val };
			}, {});
		});
	}

	// FILTER
	function filter(elem){
		// TODO filter on add/remove keyword

		showEvents();
		
		const $elem = $(elem);
		const isFilled = $elem.hasClass("filled");

		// reset filter btn state
		$(".filter-btn").removeClass("filled");
		$(".filter-btn").addClass("outlined");

		$(".reset-filter-btn").addClass("hidden");
		$(".reset-filter-btn").removeClass("fade-right");

		$(".event").css("display", "flex");

		if (!isFilled) {
			$elem.toggleClass("outlined filled");
			switch ($elem.text()) {
				case "Nascondi conclusi":
					$(".event-past").hide();
					break;
				case "In corso":
					$(".event, .event-past").hide();
					$(".event-running").css("display", "flex");
					break;
				case "Futuri":
					$(".event-past, .event-running").hide();
					break;
				case "Conclusi":
					$(".event, .event-running").hide();
					$(".event-past").css("display", "flex");
					break;
				default:
					break;
			}
			console.log("Filter applied: " + $elem.text());
		}

		/* $eventsContainer display
		 * "none" se tutti event sono nascosti
		 * "block" se almeno uno non è nascosto
		 */
		for (let gg = 0; gg < daysShown; gg++) {
			const $eventsContainer = $("#events-" + gg);
			const allChildrenHidden = $eventsContainer.find(".event").not(":hidden").length === 0;
			$eventsContainer.css("display", allChildrenHidden ? "none" : "block");
		}

		// save in localStorage the filters
		if($elem.hasClass("filled")) localStorage.setItem("filter", $elem.text());
		else localStorage.removeItem("filter");
		
	}

	function applyFilterFromLocalStorage() {
		if(localStorage.getItem('filter') != null){
			$('.filter-btn').each(function(){
				if($(this).text() == localStorage.getItem('filter')){
					filter(this);
					$('.filter-on-circle').css('visibility', 'visible');
					$(".reset-filter-btn").removeClass("hidden");
					$(".reset-filter-btn").addClass("fade-right");
				}
			});
		}
	}

	function showFilters(elem){
		$elem = $(elem);
		$elem.toggleClass('outlined filled');
		
		$elem.find('.material-symbols-outlined').html($elem.find('.material-symbols-outlined').html() == 'tune' ? 'close' : 'tune');

		$('.filter-on-circle').css('visibility', 'hidden');

		$(".reset-filter-btn").removeClass("fade-right");
		$(".reset-filter-btn").addClass("fade-left-out");
		
		let $filterBtns = $('.filter-btn');
		for(let i = 0; i < $filterBtns.length; i++){
            setTimeout(() => {
				if($elem.hasClass('filled')){
					$filterBtns.eq(i).removeClass('hidden fade-left-out');
					$filterBtns.eq(i).addClass('fade-right');
				}else{
					if($filterBtns.eq($filterBtns.length - i - 1).hasClass('filled')) $('.filter-on-circle').css('visibility', 'visible');
					$filterBtns.eq($filterBtns.length - i - 1).removeClass('fade-right');
					$filterBtns.eq($filterBtns.length - i - 1).addClass('fade-left-out');
					// if there is a active filter, show the reset filter button
					if($('.filter-btn.filled').length > 0){
						$(".reset-filter-btn").removeClass("hidden");
						$(".reset-filter-btn").removeClass("fade-left-out");
						$(".reset-filter-btn").addClass("fade-right");
					}
				}
            }, 150 * i);
		}
	}

	function resetFilters(){
		$(".filter-btn").removeClass("filled");
		$(".filter-btn").addClass("outlined");
		$(".event").css("display", "flex");
		$(".reset-filter-btn").removeClass("fade-right");
		$(".reset-filter-btn").addClass("fade-left-out");
		$(".filter-on-circle").css("visibility", "hidden");
		$("#events-0").css("display", "block");
		$("#events-1").css("display", "block");
		$("#events-2").css("display", "block");
		$("#events-3").css("display", "block");
		localStorage.removeItem("filter");
	}
</script>

</div> <!-- end CercaEventi -->
<style>
	.main{
		min-height: calc(100vh - 78px);
		min-height: calc(100dvh - 78px);
		width: 100%;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}
	#CercaEventi{
		width: 100%;
	}
</style>
<div class="bottom"> <!-- start bottom -->
	<!-- FEEDBACK & RECRUITING -->
	<style>
		#feedback-recruiting{
			margin: 17px 0 25px 0;
		}
		#feedback-recruiting .card-1 i{
			font-size: 1.5rem; transition: transform 0.3s cubic-bezier(0.2, 0, 0, 1);
		}
		#feedback-recruiting .flex-col-center{
			width: 100%; color: var(--on-surface); text-decoration: none; box-sizing: border-box;
		}
		#feedback-recruiting div > a.card-1:first-of-type:hover {
			border-color: var(--surface-variant);
			color: var(--on-surface-variant);
		}
		#feedback-recruiting div > a.card-1:first-of-type:before {
			background-color: var(--surface-variant);
			top: 100% !important;
			left: -25px !important;
		}
		#feedback-recruiting div > a.card-1:last-of-type:hover {
			border-color: var(--primary);
			color: var(--on-primary);
		}
		#feedback-recruiting div > a.card-1:last-of-type:before {
			background-color: var(--primary);
			top: 100% !important;
			left: -25px !important;
		}
		#feedback-recruiting .grid-center-2col{
			width: 100%; gap: 15px;
			grid-template-columns: 1fr 1fr;
			max-width: 600px; /* 300px + 300px */
		}
		@media screen and (max-width: 600px) {
			#feedback-recruiting .grid-center-2col{
				grid-template-columns: 1fr 1fr;
				gap: 10px;
			}
			#feedback-recruiting .card-1{
				flex-direction: row;
				justify-content: space-evenly;
				gap: 5px;
				padding: 15px;
			}
			#feedback-recruiting h4{
				font-size: 14px;
			}
			#feedback-recruiting .card-1 i{
				margin: 0px;
			}
		}
	</style>
	<h2 style="text-align: center; margin: 5px 0;"><span class="primary-text">Contribuisci</span> a Fermi Notify</h2>
	<!-- BUY ME A COFFEE -->
	<div class="coffee-container">
		<a class="coffee-button" href="https://www.buymeacoffee.com/ferminotify">
		<h1 class="coffee-arrow">&gt;</h1>
		<div class="coffee-link">
			<h1 class="coffee-icon"><i class="fa-solid fa-mug-hot"></i></h1>
			<div class="coffee-text">
				<h2 class="coffee-text-big">OFFRICI UN CAFF&Egrave;</h2>
				<span class="coffee-text-small">e supporta il progetto</span>
			</div>
		</div>
		<h1 class="coffee-arrow">&lt;</h1>
		</a>
	</div>
	<div id="feedback-recruiting">
		<div class="grid-center-2col">
			<a class="card-1" href="./feedback">
				<i class="fas fa-comment"></i>
				<h4 style="margin: 0;">Feedback & suggerimenti</h4>
			</a>
			<a class="card-1" href="./recruiting">
				<i class="fas fa-users"></i>
				<h4 style="margin: 0;">Candidati per il team</h4>
			</a>
		</div>
	</div>
</div>

<%- include('includes/footer.ejs') %>

<%- include('includes/alertbanner.ejs') %>

</body>
</html>
